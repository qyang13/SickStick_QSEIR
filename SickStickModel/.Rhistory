density.info = "none",
breaks = c(seq(0,250)*0.01),
key=F
)
return(p)
}
load(file="emp_res.Rdata")
#annot_influenza=annot_rmna
#annot_coronavirus=annot_rmna
annot_rhinovirus=annot_rmna
save(list=c("annot_influenza", "annot_coronavirus", "annot_rhinovirus"), file="disease_res.Rdata")
load(file="emp_res.Rdata")
load(file="disease_res.Rdata")
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
View(counts_norm)
corona_Expr=data.frame(matrix(ncol = 0, nrow = nrow(counts_norm$E)))
for( name in metaDat$SUBJECT_ID[grep('rhinovirus', metaDat$Virus_by_PCR)]){
corona_Expr=cbind(corona_Expr,counts_norm$E[,grep(name, colnames(counts_norm$E))])
}
View(corona_Expr)
time=character()
sampleID=character()
time_num=integer()
for(id in colnames(corona_Expr)){
time=c(time, sub('.*_', '', id))
time_num=c(time_num, convert_to_days(sub('.*_', '', id)))
sampleID=c(sampleID, sub('_.*', '', id))
}
condition=data.frame(colnames(corona_Expr), sampleID, time, time_num)
annot_expr <-  data.frame(unique(merge(corona_Expr, lookup, by.x="row.names", by.y="Probe_Id", all.x= T, all.y=F)), stringsAsFactors = F)
View(annot_expr)
annot_expr=annot[!is.na(annot_expr$ILMN_Gene),]
grep("ifit2", tolower(annot_expr$ILMN_Gene))
grep("ifit2", tolower(annot_expr$ILMN_Gene))[1]
annot_expr <-  data.frame(unique(merge(corona_Expr, lookup, by.x="row.names", by.y="Probe_Id", all.x= T, all.y=F)), stringsAsFactors = F)
annot_expr <- annot_expr[!is.na(annot_expr$ILMN_Gene),]
grep("ifit2", tolower(annot_expr$ILMN_Gene))[1]
select_gene = annot_expr[grep("ifit2", tolower(annot_expr$ILMN_Gene))[1],2:350]
View(select_gene)
View(condition)
select_gene_expr = annot_expr[grep("ifit2", tolower(annot_expr$ILMN_Gene))[1],2:350]
select_gene = cbind(select_gene_expr, condition)
View(select_gene)
select_gene_expr = t(annot_expr[grep("ifit2", tolower(annot_expr$ILMN_Gene))[1],2:350])
select_gene = cbind(select_gene_expr, condition)
View(select_gene)
select_gene = cbind(expr=select_gene_expr, condition)
select_gene_expr = t(annot_expr[grep("ifit2", tolower(annot_expr$ILMN_Gene))[1],2:350])
select_gene = cbind(expr=select_gene_expr, condition)
View(select_gene)
select_gene = data.frame(expr=select_gene_expr, condition)
select_gene = data.frame(select_gene_expr, condition)
select_gene_expr = t(annot_expr[grep("ifit2", tolower(annot_expr$ILMN_Gene))[1],2:350])
select_gene = data.frame(select_gene_expr, condition)
p <-  ggplot(select_gene,
aes(x=time_num, y=select_gene[,1], group=sampleID)) +
ggtitle("") +
geom_line(aes(colour = sampleID), size=2) +
labs(x = "Infection Time", y = "Normalized Expression Level") +
geom_hline(yintercept=0, color="grey", linetype="dashed")+
theme_solarized_2(light=FALSE)+
scale_colour_solarized('blue')
p <-  ggplot(select_gene,
aes(x=time_num, y=select_gene[,1], group=sampleID)) +
ggtitle("") +
geom_line(aes(colour = sampleID), size=2) +
labs(x = "Infection Time", y = "Normalized Expression Level") +
geom_hline(yintercept=0, color="grey", linetype="dashed")
print(p)
p <-  ggplot(select_gene,
aes(x=time_num, y=select_gene[,1], group=sampleID)) +
ggtitle("") +
geom_line(aes(colour = sampleID), size=2) +
labs(x = "Infection Time", y = "Normalized Expression Level")
print(p)
select_gene_expr = t(annot_expr[grep("ifit3", tolower(annot_expr$ILMN_Gene))[1],2:350])
select_gene = data.frame(select_gene_expr, condition)
p <-  ggplot(select_gene,
aes(x=time_num, y=select_gene[,1], group=sampleID)) +
ggtitle("") +
geom_line(aes(colour = sampleID), size=2) +
labs(x = "Infection Time", y = "Normalized Expression Level")
print(p)
a=1
summary=summary(select_gene[grep(a, select_gene$time_num), 1])
summary
res=data.frame()
for (a in c(0,1,3,5,7,22,40)){
summary=summary(select_gene[grep(a, select_gene$time_num), 1])
mean=summary[4]
quant1=summary[2]
quant3=summary[5]
res=rbind(res, c(a, mean, quant1, quant3))
}
View(res)
colnames(res)=c("expr","mean","quant1","quant3")
colnames(res)=c("time","mean","quant1","quant3")
library(ggthemes)
p <-  ggplot(res,
aes(x=time, y=mean)) +
geom_ribbon(aes(ymin=quant1, ymax=quant3), alpha=0.2, fill='#657b83')+
ggtitle("") +
geom_line(aes(colour = sampleID), size=2) +
labs(x = "Infection Time", y = "Normalized Expression Level") +
theme_solarized_2(light=FALSE)+
scale_colour_solarized('blue')
print(p)
p <-  ggplot(res,aes(x=time, y=mean)) +
geom_ribbon(aes(ymin=quant1, ymax=quant3), alpha=0.2, fill='#657b83')+
ggtitle("") +
geom_line(size=2) +
labs(x = "Infection Time", y = "Normalized Expression Level") +
theme_solarized_2(light=FALSE)+
scale_colour_solarized('blue')
print(p)
p <-  ggplot(res,aes(x=time, y=mean)) +
geom_ribbon(aes(ymin=quant1, ymax=quant3), alpha=0.2, fill='#657b83')+
ggtitle("") +
geom_line(color="red",size=2) +
labs(x = "Infection Time", y = "Normalized Expression Level") +
theme_solarized_2(light=FALSE)+
scale_colour_solarized('blue')
print(p)
select_gene_expr = t(annot_expr[grep("ifit2", tolower(annot_expr$ILMN_Gene))[1],2:350])
select_gene = data.frame(select_gene_expr, condition)
res=data.frame()
for (a in c(0,1,3,5,7,22,40)){
summary=summary(select_gene[grep(a, select_gene$time_num), 1])
mean=summary[4]
quant1=summary[2]
quant3=summary[5]
res=rbind(res, c(a, mean, quant1, quant3))
}
colnames(res)=c("time","mean","quant1","quant3")
p <-  ggplot(res,aes(x=time, y=mean)) +
geom_ribbon(aes(ymin=quant1, ymax=quant3), alpha=0.2, fill='#657b83')+
ggtitle("") +
geom_line(color="red",size=2) +
labs(x = "Infection Time", y = "Normalized Expression Level") +
theme_solarized_2(light=FALSE)+
scale_colour_solarized('blue')
print(p)
select_gene_expr = t(annot_expr[grep("actb", tolower(annot_expr$ILMN_Gene))[1],2:350])
select_gene = data.frame(select_gene_expr, condition)
res=data.frame()
for (a in c(0,1,3,5,7,22,40)){
summary=summary(select_gene[grep(a, select_gene$time_num), 1])
mean=summary[4]
quant1=summary[2]
quant3=summary[5]
res=rbind(res, c(a, mean, quant1, quant3))
}
colnames(res)=c("time","mean","quant1","quant3")
p <-  ggplot(res,aes(x=time, y=mean)) +
geom_ribbon(aes(ymin=quant1, ymax=quant3), alpha=0.2, fill='#657b83')+
ggtitle("") +
geom_line(color="red",size=2) +
labs(x = "Infection Time", y = "Normalized Expression Level") +
theme_solarized_2(light=FALSE)+
scale_colour_solarized('blue')
print(p)
select_gene_expr = t(annot_expr[grep("ncl", tolower(annot_expr$ILMN_Gene))[1],2:350])
select_gene = data.frame(select_gene_expr, condition)
res=data.frame()
for (a in c(0,1,3,5,7,22,40)){
summary=summary(select_gene[grep(a, select_gene$time_num), 1])
mean=summary[4]
quant1=summary[2]
quant3=summary[5]
res=rbind(res, c(a, mean, quant1, quant3))
}
colnames(res)=c("time","mean","quant1","quant3")
p <-  ggplot(res,aes(x=time, y=mean)) +
geom_ribbon(aes(ymin=quant1, ymax=quant3), alpha=0.2, fill='#657b83')+
ggtitle("") +
geom_line(color="red",size=2) +
labs(x = "Infection Time", y = "Normalized Expression Level") +
theme_solarized_2(light=FALSE)+
scale_colour_solarized('blue')
print(p)
select_gene_expr = t(annot_expr[grep("eif3a", tolower(annot_expr$ILMN_Gene))[1],2:350])
select_gene = data.frame(select_gene_expr, condition)
res=data.frame()
for (a in c(0,1,3,5,7,22,40)){
summary=summary(select_gene[grep(a, select_gene$time_num), 1])
mean=summary[4]
quant1=summary[2]
quant3=summary[5]
res=rbind(res, c(a, mean, quant1, quant3))
}
colnames(res)=c("time","mean","quant1","quant3")
p <-  ggplot(res,aes(x=time, y=mean)) +
geom_ribbon(aes(ymin=quant1, ymax=quant3), alpha=0.2, fill='#657b83')+
ggtitle("") +
geom_line(color="red",size=2) +
labs(x = "Infection Time", y = "Normalized Expression Level") +
theme_solarized_2(light=FALSE)+
scale_colour_solarized('blue')
print(p)
select_gene_expr = t(annot_expr[grep("eif3", tolower(annot_expr$ILMN_Gene))[1],2:350])
select_gene = data.frame(select_gene_expr, condition)
res=data.frame()
for (a in c(0,1,3,5,7,22,40)){
summary=summary(select_gene[grep(a, select_gene$time_num), 1])
mean=summary[4]
quant1=summary[2]
quant3=summary[5]
res=rbind(res, c(a, mean, quant1, quant3))
}
colnames(res)=c("time","mean","quant1","quant3")
p <-  ggplot(res,aes(x=time, y=mean)) +
geom_ribbon(aes(ymin=quant1, ymax=quant3), alpha=0.2, fill='#657b83')+
ggtitle("") +
geom_line(color="red",size=2) +
labs(x = "Infection Time", y = "Normalized Expression Level") +
theme_solarized_2(light=FALSE)+
scale_colour_solarized('blue')
print(p)
select_gene_expr = t(annot_expr[grep("icam1", tolower(annot_expr$ILMN_Gene))[1],2:350])
select_gene = data.frame(select_gene_expr, condition)
res=data.frame()
for (a in c(0,1,3,5,7,22,40)){
summary=summary(select_gene[grep(a, select_gene$time_num), 1])
mean=summary[4]
quant1=summary[2]
quant3=summary[5]
res=rbind(res, c(a, mean, quant1, quant3))
}
colnames(res)=c("time","mean","quant1","quant3")
p <-  ggplot(res,aes(x=time, y=mean)) +
geom_ribbon(aes(ymin=quant1, ymax=quant3), alpha=0.2, fill='#657b83')+
ggtitle("") +
geom_line(color="red",size=2) +
labs(x = "Infection Time", y = "Normalized Expression Level") +
theme_solarized_2(light=FALSE)+
scale_colour_solarized('blue')
print(p)
select_gene_expr = t(annot_expr[grep("eef2", tolower(annot_expr$ILMN_Gene))[1],2:350])
select_gene = data.frame(select_gene_expr, condition)
res=data.frame()
for (a in c(0,1,3,5,7,22,40)){
summary=summary(select_gene[grep(a, select_gene$time_num), 1])
mean=summary[4]
quant1=summary[2]
quant3=summary[5]
res=rbind(res, c(a, mean, quant1, quant3))
}
colnames(res)=c("time","mean","quant1","quant3")
p <-  ggplot(res,aes(x=time, y=mean)) +
geom_ribbon(aes(ymin=quant1, ymax=quant3), alpha=0.2, fill='#657b83')+
ggtitle("") +
geom_line(color="red",size=2) +
labs(x = "Infection Time", y = "Normalized Expression Level") +
theme_solarized_2(light=FALSE)+
scale_colour_solarized('blue')
print(p)
select_gene_expr = t(annot_expr[grep("gapdh", tolower(annot_expr$ILMN_Gene))[1],2:350])
select_gene = data.frame(select_gene_expr, condition)
res=data.frame()
for (a in c(0,1,3,5,7,22,40)){
summary=summary(select_gene[grep(a, select_gene$time_num), 1])
mean=summary[4]
quant1=summary[2]
quant3=summary[5]
res=rbind(res, c(a, mean, quant1, quant3))
}
colnames(res)=c("time","mean","quant1","quant3")
p <-  ggplot(res,aes(x=time, y=mean)) +
geom_ribbon(aes(ymin=quant1, ymax=quant3), alpha=0.2, fill='#657b83')+
ggtitle("") +
geom_line(color="red",size=2) +
labs(x = "Infection Time", y = "Normalized Expression Level") +
theme_solarized_2(light=FALSE)+
scale_colour_solarized('blue')
print(p)
select_gene_expr = t(annot_expr[grep("calr", tolower(annot_expr$ILMN_Gene))[1],2:350])
select_gene = data.frame(select_gene_expr, condition)
res=data.frame()
for (a in c(0,1,3,5,7,22,40)){
summary=summary(select_gene[grep(a, select_gene$time_num), 1])
mean=summary[4]
quant1=summary[2]
quant3=summary[5]
res=rbind(res, c(a, mean, quant1, quant3))
}
colnames(res)=c("time","mean","quant1","quant3")
p <-  ggplot(res,aes(x=time, y=mean)) +
geom_ribbon(aes(ymin=quant1, ymax=quant3), alpha=0.2, fill='#657b83')+
ggtitle("") +
geom_line(color="red",size=2) +
labs(x = "Infection Time", y = "Normalized Expression Level") +
theme_solarized_2(light=FALSE)+
scale_colour_solarized('blue')
print(p)
select_gene_expr = t(annot_expr[grep("rpl4", tolower(annot_expr$ILMN_Gene))[1],2:350])
select_gene = data.frame(select_gene_expr, condition)
res=data.frame()
for (a in c(0,1,3,5,7,22,40)){
summary=summary(select_gene[grep(a, select_gene$time_num), 1])
mean=summary[4]
quant1=summary[2]
quant3=summary[5]
res=rbind(res, c(a, mean, quant1, quant3))
}
colnames(res)=c("time","mean","quant1","quant3")
p <-  ggplot(res,aes(x=time, y=mean)) +
geom_ribbon(aes(ymin=quant1, ymax=quant3), alpha=0.2, fill='#657b83')+
ggtitle("") +
geom_line(color="red",size=2) +
labs(x = "Infection Time", y = "Normalized Expression Level") +
theme_solarized_2(light=FALSE)+
scale_colour_solarized('blue')
print(p)
select_gene_expr = t(annot_expr[grep("RPS23", tolower(annot_expr$ILMN_Gene))[1],2:350])
select_gene = data.frame(select_gene_expr, condition)
res=data.frame()
for (a in c(0,1,3,5,7,22,40)){
summary=summary(select_gene[grep(a, select_gene$time_num), 1])
mean=summary[4]
quant1=summary[2]
quant3=summary[5]
res=rbind(res, c(a, mean, quant1, quant3))
}
colnames(res)=c("time","mean","quant1","quant3")
p <-  ggplot(res,aes(x=time, y=mean)) +
geom_ribbon(aes(ymin=quant1, ymax=quant3), alpha=0.2, fill='#657b83')+
ggtitle("") +
geom_line(color="red",size=2) +
labs(x = "Infection Time", y = "Normalized Expression Level") +
theme_solarized_2(light=FALSE)+
scale_colour_solarized('blue')
print(p)
select_gene_expr = t(annot_expr[grep("ctsd", tolower(annot_expr$ILMN_Gene))[1],2:350])
select_gene = data.frame(select_gene_expr, condition)
res=data.frame()
for (a in c(0,1,3,5,7,22,40)){
summary=summary(select_gene[grep(a, select_gene$time_num), 1])
mean=summary[4]
quant1=summary[2]
quant3=summary[5]
res=rbind(res, c(a, mean, quant1, quant3))
}
colnames(res)=c("time","mean","quant1","quant3")
p <-  ggplot(res,aes(x=time, y=mean)) +
geom_ribbon(aes(ymin=quant1, ymax=quant3), alpha=0.2, fill='#657b83')+
ggtitle("") +
geom_line(color="red",size=2) +
labs(x = "Infection Time", y = "Normalized Expression Level") +
theme_solarized_2(light=FALSE)+
scale_colour_solarized('blue')
print(p)
selected_Gene="ifit3"
select_gene_expr = t(annot_expr[grep(tolower(selected_Gene), tolower(annot_expr$ILMN_Gene))[1],2:350])
select_gene = data.frame(select_gene_expr, condition)
res=data.frame()
for (a in c(0,1,3,5,7,22,40)){
summary=summary(select_gene[grep(a, select_gene$time_num), 1])
mean=summary[4]
quant1=summary[2]
quant3=summary[5]
res=rbind(res, c(a, mean, quant1, quant3))
}
colnames(res)=c("time","mean","quant1","quant3")
p <-  ggplot(res,aes(x=time, y=mean)) +
geom_ribbon(aes(ymin=quant1, ymax=quant3), alpha=0.2, fill='#657b83')+
ggtitle(selected_Gene) +
geom_line(color="red",size=2) +
labs(x = "Infection Time", y = "Normalized Expression Level") +
theme_solarized_2(light=FALSE)+
scale_colour_solarized('blue')
print(p)
selected_Gene="ifiadft3"
select_gene_expr = t(annot_expr[grep(tolower(selected_Gene), tolower(annot_expr$ILMN_Gene))[1],2:350])
select_gene = data.frame(select_gene_expr, condition)
res=data.frame()
for (a in c(0,1,3,5,7,22,40)){
summary=summary(select_gene[grep(a, select_gene$time_num), 1])
mean=summary[4]
quant1=summary[2]
quant3=summary[5]
res=rbind(res, c(a, mean, quant1, quant3))
}
colnames(res)=c("time","mean","quant1","quant3")
View(res)
expr_rhinovirus=annot_expr
cond_rhinovirus=condition
corona_Expr=data.frame(matrix(ncol = 0, nrow = nrow(counts_norm$E)))
for( name in metaDat$SUBJECT_ID[grep('influenza', metaDat$Virus_by_PCR)]){
corona_Expr=cbind(corona_Expr,counts_norm$E[,grep(name, colnames(counts_norm$E))])
}
time=character()
sampleID=character()
time_num=integer()
for(id in colnames(corona_Expr)){
time=c(time, sub('.*_', '', id))
time_num=c(time_num, convert_to_days(sub('.*_', '', id)))
sampleID=c(sampleID, sub('_.*', '', id))
}
condition=data.frame(colnames(corona_Expr), sampleID, time, time_num)
annot_expr <-  data.frame(unique(merge(corona_Expr, lookup, by.x="row.names", by.y="Probe_Id", all.x= T, all.y=F)), stringsAsFactors = F)
annot_expr <- annot_expr[!is.na(annot_expr$ILMN_Gene),]
# expr_rhinovirus=annot_expr
# cond_rhinovirus=condition
expr_influenza=annot_expr
cond_influenza=condition
corona_Expr=data.frame(matrix(ncol = 0, nrow = nrow(counts_norm$E)))
for( name in metaDat$SUBJECT_ID[grep('coronavirus', metaDat$Virus_by_PCR)]){
corona_Expr=cbind(corona_Expr,counts_norm$E[,grep(name, colnames(counts_norm$E))])
}
time=character()
sampleID=character()
time_num=integer()
for(id in colnames(corona_Expr)){
time=c(time, sub('.*_', '', id))
time_num=c(time_num, convert_to_days(sub('.*_', '', id)))
sampleID=c(sampleID, sub('_.*', '', id))
}
condition=data.frame(colnames(corona_Expr), sampleID, time, time_num)
annot_expr <-  data.frame(unique(merge(corona_Expr, lookup, by.x="row.names", by.y="Probe_Id", all.x= T, all.y=F)), stringsAsFactors = F)
annot_expr <- annot_expr[!is.na(annot_expr$ILMN_Gene),]
# expr_rhinovirus=annot_expr
# cond_rhinovirus=condition
# expr_influenza=annot_expr
# cond_influenza=condition
expr_coronavirus=annot_expr
cond_coronavirus=condition
save(list=c("expr_rhinovirus", "cond_rhinovirus", "expr_influenza","cond_influenza","expr_coronavirus","cond_coronavirus"), file="disease_kinetics.Rdata")
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
selected_Gene="ifit3"
select_gene_expr = t(annot_expr[grep(tolower(selected_Gene), tolower(annot_expr$ILMN_Gene))[1],2:350])
select_gene_expr = t(annot_expr[grep(tolower(selected_Gene), tolower(annot_expr$ILMN_Gene))[1],2:(nrow(condition)+1)])
select_gene = data.frame(select_gene_expr, condition)
res=data.frame()
for (a in c(0,1,3,5,7,22,40)){
summary=summary(select_gene[grep(a, select_gene$time_num), 1])
mean=summary[4]
quant1=summary[2]
quant3=summary[5]
res=rbind(res, c(a, mean, quant1, quant3))
}
colnames(res)=c("time","mean","quant1","quant3")
p <-  ggplot(res,aes(x=time, y=mean)) +
geom_ribbon(aes(ymin=quant1, ymax=quant3), alpha=0.2, fill='#657b83')+
ggtitle(selected_Gene) +
geom_line(color="red",size=2) +
labs(x = "Infection Time", y = "Normalized Expression Level") +
theme_solarized_2(light=FALSE)+
scale_colour_solarized('blue')
print(p)
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
runApp('zhai_data_vis_app')
library(rsconnect)
setwd("zhai_data_vis_app/")
rsconnect::deployApp('~/Documents/metaAnalysis_v2/Zhai_2015_cohort_study/zhai_data_vis_app/')
runApp()
